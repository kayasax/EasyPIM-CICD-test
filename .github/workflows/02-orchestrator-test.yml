name: 'Phase 2: EasyPIM Orchestrator Test'

run-name: >-
  EasyPIM ${{ github.event.inputs.WhatIf == 'true' && 'üîç Preview' || '‚ö° Apply' }}
  (${{ github.event.inputs.Mode }})
  ${{ github.event.inputs.run_description && format('- {0}', github.event.inputs.run_description) || '' }}

on:
  workflow_dispatch:
    inputs:
      run_description:
        description: "Custom description for this run (optional)"
        required: false
        type: string
        default: ""
      WhatIf:
        description: "Preview mode - show what would be done without making changes"
        required: false
        default: true
        type: boolean
      Mode:
        description: "Orchestrator execution mode (delta=incremental, initial=destructive cleanup)"
        required: false
        default: "delta"
        type: choice
        options:
          - delta
          - initial
      SkipPolicies:
        description: "Skip policy operations (assignments only)"
        required: false
        default: false
        type: boolean
      SkipAssignments:
        description: "Skip assignment operations (policies only)"
        required: false
        default: false
        type: boolean
      Force:
        description: "Force execution (bypass confirmations)"
        required: false
        default: false
        type: boolean
      Verbose:
        description: "Enable verbose output"
        required: false
        default: false
        type: boolean
      ExportWouldRemove:
        description: "Export list of items that would be removed (audit purposes)"
        required: false
        default: false
        type: boolean

env:
  KEYVAULT_NAME: ${{ vars.AZURE_KEYVAULT_NAME }}
  SECRET_NAME: ${{ vars.AZURE_KEYVAULT_SECRET_NAME }}
  TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}

permissions:
  id-token: write   # for OIDC
  contents: read

jobs:
  orchestrator-test:
    runs-on: ubuntu-latest
    name: 'EasyPIM Orchestrator Execution'

    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v4

    - name: 'Azure OIDC Login'
      uses: azure/login@v2
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.TENANT_ID }}
        subscription-id: ${{ env.SUBSCRIPTION_ID }}

    - name: 'Install EasyPIM Modules'
      shell: pwsh
      run: |
        & ./scripts/workflows/Install-EasyPIMModules.ps1

    - name: 'Setup EasyPIM Authentication'
      shell: pwsh
      run: |
        . ./scripts/workflows/Setup-EasyPIMAuthentication.ps1 `
          -TenantId '${{ env.TENANT_ID }}' `
          -SubscriptionId '${{ env.SUBSCRIPTION_ID }}' `
          -ClientId '${{ env.AZURE_CLIENT_ID }}'

    - name: 'EasyPIM Orchestrator Execution'
      shell: pwsh
      run: |
        Write-Host "‚öôÔ∏è Starting EasyPIM Orchestrator execution..." -ForegroundColor Cyan

        Write-Host "Parameters:" -ForegroundColor Yellow
        Write-Host "  WhatIf: ${{ github.event.inputs.WhatIf }}" -ForegroundColor White
        Write-Host "  Mode: ${{ github.event.inputs.Mode }}" -ForegroundColor White
        Write-Host "  SkipPolicies: ${{ github.event.inputs.SkipPolicies }}" -ForegroundColor White
        Write-Host "  SkipAssignments: ${{ github.event.inputs.SkipAssignments }}" -ForegroundColor White
        Write-Host "  Force: ${{ github.event.inputs.Force }}" -ForegroundColor White
        Write-Host "  Verbose: ${{ github.event.inputs.Verbose }}" -ForegroundColor White
        Write-Host "  ExportWouldRemove: ${{ github.event.inputs.ExportWouldRemove }}" -ForegroundColor White

        # Build parameters for Invoke-EasyPIMOrchestrator
        $params = @{
          KeyVaultName = '${{ env.KEYVAULT_NAME }}'
          SecretName = '${{ env.SECRET_NAME }}'
          TenantId = '${{ env.TENANT_ID }}'
          SubscriptionId = '${{ env.SUBSCRIPTION_ID }}'
          Mode = '${{ github.event.inputs.Mode }}'
        }        # Add conditional parameters
        if ('${{ github.event.inputs.WhatIf }}' -eq 'true') {
          $params.WhatIf = $true
          Write-Host "üîç Running in WhatIf mode (preview only)" -ForegroundColor Yellow
        }

        if ('${{ github.event.inputs.SkipPolicies }}' -eq 'true') {
          $params.SkipPolicies = $true
          Write-Host "‚è≠Ô∏è Skipping policy operations" -ForegroundColor Yellow
        }

        if ('${{ github.event.inputs.SkipAssignments }}' -eq 'true') {
          $params.SkipAssignments = $true
          Write-Host "‚è≠Ô∏è Skipping assignment operations" -ForegroundColor Yellow
        }

        if ('${{ github.event.inputs.Force }}' -eq 'true') {
          $params.Force = $true
          Write-Host "üí™ Force mode enabled" -ForegroundColor Yellow
        }

        if ('${{ github.event.inputs.Verbose }}' -eq 'true') {
          $params.Verbose = $true
          Write-Host "üìù Verbose output enabled" -ForegroundColor Yellow
        }

        if ('${{ github.event.inputs.ExportWouldRemove }}' -eq 'true') {
          $params.ExportWouldRemove = $true
          Write-Host "üì§ Export would-remove list enabled" -ForegroundColor Yellow
        }

        try {
          # Execute EasyPIM Orchestrator
          Write-Host "`nüîÑ Executing EasyPIM Orchestrator..." -ForegroundColor Cyan
          Invoke-EasyPIMOrchestrator @params
          Write-Host "‚úÖ EasyPIM Orchestrator completed successfully" -ForegroundColor Green
        }
        catch {
          Write-Host "‚ùå EasyPIM Orchestrator failed: $($_.Exception.Message)" -ForegroundColor Red
          Write-Host "Full error details:" -ForegroundColor Red
          $_ | Format-List * -Force
          throw
        }

    - name: 'Generate Workflow Summary'
      if: always()
      shell: pwsh
      run: |
        Write-Host "üìä Generating workflow summary..." -ForegroundColor Cyan

        $summary = @"
        ## üß™ EasyPIM CI/CD Test Results - Phase 2

        ${{ github.event.inputs.run_description && format('### üìù Run Description: {0}', github.event.inputs.run_description) || '' }}

        ### ‚öôÔ∏è Orchestrator Execution
        **Status:** ${{ job.status == 'success' && '‚úÖ SUCCESS' || '‚ùå FAILED' }}

        ### üìã Configuration
        - **Custom Description:** ${{ github.event.inputs.run_description || 'None provided' }}
        - **WhatIf Mode:** ${{ github.event.inputs.WhatIf }}
        - **Execution Mode:** ${{ github.event.inputs.Mode }}
        - **Skip Policies:** ${{ github.event.inputs.SkipPolicies }}
        - **Skip Assignments:** ${{ github.event.inputs.SkipAssignments }}
        - **Force Mode:** ${{ github.event.inputs.Force }}
        - **Verbose Output:** ${{ github.event.inputs.Verbose }}
        - **Export Would Remove:** ${{ github.event.inputs.ExportWouldRemove }}        ### üéØ Environment
        - **Key Vault:** ${{ env.KEYVAULT_NAME }}
        - **Configuration Secret:** ${{ env.SECRET_NAME }}
        - **Tenant ID:** ${{ env.TENANT_ID }}
        - **Subscription ID:** ${{ env.SUBSCRIPTION_ID }}

        ### üîó Next Steps
        1. Review the execution logs above for detailed results
        2. Check for any policy or assignment changes applied
        3. Consider running Phase 3 (Drift Detection) to verify compliance
        4. If this was WhatIf mode, re-run with WhatIf=false to apply changes

        ### üìö Additional Information
        - **Workflow:** Phase 2 - EasyPIM Orchestrator Test
        - **Run ID:** ${{ github.run_id }}
        - **Run Number:** ${{ github.run_number }}
        - **Triggered by:** ${{ github.actor }}
        - **Repository:** ${{ github.repository }}
        - **Branch:** ${{ github.ref_name }}
        "@

        # Output to step summary
        $summary | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8
        Write-Host "‚úÖ Workflow summary generated" -ForegroundColor Green

    - name: 'Upload Execution Logs'
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: easypim-orchestrator-logs-${{ github.run_number }}
        path: |
          ./LOGS/
          ./*.log
          ./*.json
        retention-days: 30
        if-no-files-found: warn
